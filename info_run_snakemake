Update now that the script is run on the server:

We do not care anymore how many of the jobs are run in parallel, as long as each one of
them has the correct memory assigned. Thus, it makes sense to set the memory requirements
for the MiXCR alignments to 100 GB (with the Java memory limit set to 95 GB), while the
other jobs get lower memory limits (although I still have to determine how much is used
up by the creation of the tables). Thus, in the end, the cluster should be able to decide
by itself (if only supplying the snakemake -j option), how many runs should be done in
parallel!

One of the issues is that the untar command should be run in parallel, while the other commands
should not. Thus, I included "resources: cpu=100" for all the commands that should NOT be
run in parallel. When specifiying snakemake -j --resources cpu=100, then all those rules will use up all
the available "cpu" resource, and thus only be run once, instead of multiple times in parallel.

Additionally, the command should be run on the cluster, with the pre-specified settings from the
config.json file.

TL;DR:

Run snakemake with following command: snakemake -j --resources cpu=100 --restart-times 1 --cluster-config cluster.json \
--cluster "bsub -n {cluster.nCPUs} -W {cluster.runtime} -R {cluster.resources} -J {cluster.name} -o {cluster.output} -e {cluster.error}"
